//
//  HubUpdatingViewController.m
//  mHubApp
//
//  Created by Rave on 12/12/18.
//  Copyright Â© 2018 Rave Infosys. All rights reserved.
//

#import "HubUpdatingViewController.h"
#import "UpdateAvailableViewController.h"
#import "SetupConfirmationVC.h"
#import "UpdateAvailableViewController.h"
#import "UpdateHubViewController.h" 

typedef void(^myCompletion)(BOOL);

@interface HubUpdatingViewController ()

@end

@implementation HubUpdatingViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    [self.btn_finished setHidden:YES];
    self.navigationItem.hidesBackButton = YES;
    self.navigationItem.titleView = [CustomNavigationBar customNavigationLabel:HUB_UPDATING_HEADER];
    
    [self.btn_finished addBorder_Color:[UIColor whiteColor] BorderWidth:1.0];
    
    [self.view_roundView addBorder_Color:[UIColor colorWithRed:119.0/255.0  green:200.0/255.0 blue:219.0/255.0 alpha:1.0] BorderWidth:5.0];
    [self.view_roundView addRoundedCorner_CornerRadius:self.view_roundView.frame.size.width/2];
//    if(self.objSelectedMHubDevice.MHub_LatestVersion > 0)
//    {
//         self.lbl_HubVersion.text = [NSString stringWithFormat:@"%f",self.objSelectedMHubDevice.APP_BenchMarkVersion];
//    }
//    else
//    {
//      //self.lbl_HubVersion.text = [NSString stringWithFormat:@"%f",self.objSelectedMHubDevice.APP_BenchMarkVersion];
//    }
    self.lbl_HubVersion.text = [NSString stringWithFormat:@"%.2f",self.objSelectedMHubDevice.MHub_BenchMarkVersion];
    [APIManager getFORCEMOSUpdate:self.objSelectedMHubDevice updateData:@"mhub_update:true" completion:^(APIResponse *responseObject){
    }];

    CABasicAnimation *rotate;
    rotate = [CABasicAnimation animationWithKeyPath:@"transform.rotation"];
    rotate.fromValue = [NSNumber numberWithFloat:0];
    rotate.toValue = [NSNumber numberWithFloat:10.0];
    rotate.duration = 120.0;
    rotate.repeatCount = 120.0;
    [self.img_loadingProgress.layer addAnimation:rotate forKey:@"10"];
    [self performSelector:@selector(stopRotation) withObject:nil afterDelay:120.0];
 
}


-(void)stopRotation
{
    [self fileAllDetails];
    self.navigationItem.backBarButtonItem = customBackBarButton;
    self.navigationItem.titleView = [CustomNavigationBar customNavigationLabel:HUB_UPDATE_COMPLETED];
    [self.img_loadingProgress setHidden:YES];
    [self.btn_finished setHidden:NO];
    
}

#pragma mark - REST API methods

-(void) fileAllDetails {
    @try {
        [APIManager fileAllDetails:self.objSelectedMHubDevice completion:^(APIV2Response *responseObject) {
            if (!responseObject.error) {
                Hub *objHubAPI = (Hub *)responseObject.data_description;
                [[AppDelegate appDelegate] hideHudView:HideIndicator Message:@""];
                self.objSelectedMHubDevice = [Hub getHubObject_From:objHubAPI To:self.objSelectedMHubDevice];
                if(self.objSelectedMHubDevice.BootFlag == true) {
                    
                }
               
                [self viewDidLayoutSubviews];
            }
            else
            {
                [self errorMessageOverlayNavigation];
            }
        }];
    } @catch (NSException *exception) {
        [[AppDelegate appDelegate] exceptionLog:exception Function:__PRETTY_FUNCTION__ Line:__LINE__];
    }
}

-(void) errorMessageOverlayNavigation {
    @try {
        ErrorMessageOverlayVC *objVC = [mainStoryboard   instantiateViewControllerWithIdentifier:@"ErrorMessageOverlayVC"];
        objVC.providesPresentationContextTransitionStyle = YES;
        objVC.definesPresentationContext = YES;
        objVC.isFirstAppORMosUpdateAlertPage = NO;
        [objVC setModalPresentationStyle:UIModalPresentationOverCurrentContext];
        [self presentViewController:objVC animated:YES completion:nil];
    } @catch (NSException *exception) {
        [[AppDelegate appDelegate] exceptionLog:exception Function:__PRETTY_FUNCTION__ Line:__LINE__];
    }
}

-(void) ImageRotationMethod:(myCompletion) compblock{
    //do stuff
    [UIView animateWithDuration:90.0 delay:0 options:UIViewAnimationOptionCurveLinear animations:^{
        [self.img_loadingProgress setTransform:CGAffineTransformRotate(self.img_loadingProgress.transform, M_PI_2)];
    }completion:^(BOOL finished){
        compblock(YES);
//        [self.btn_finished setHidden:NO];
//        if (finished) {
//            [self.btn_finished setHidden:NO];
//        }
    }];
    
}

- (void) runSpinAnimationOnView:(UIView*)view duration:(CGFloat)duration rotations:(CGFloat)rotations repeat:(float)repeat;
{
    CABasicAnimation* rotationAnimation;
    rotationAnimation = [CABasicAnimation animationWithKeyPath:@"transform.rotation.z"];
    rotationAnimation.toValue = [NSNumber numberWithFloat:1.00];
    rotationAnimation.duration = duration;
    rotationAnimation.cumulative = YES;
    rotationAnimation.repeatCount = repeat;
    [self.img_loadingProgress.layer addAnimation:rotationAnimation forKey:@"rotationAnimation"];
}

- (IBAction)btn_UpdateFinished:(CustomButton *)sender {
    
    if(_isSingleUnit)
   {
       
       if(_navigateFromType == 2)
       {
           for (UIViewController *controller in self.navigationController.viewControllers) {
               
               //Do not forget to import AnOldViewController.h
               if ([controller isKindOfClass:[UpdateHubViewController class]]) {
                   
                   [self.navigationController popToViewController:controller
                                                         animated:YES];
                   return;
               }
           }
       
      
       }
       else
       {
           SetupConfirmationVC *objVC = [mainStoryboard instantiateViewControllerWithIdentifier:@"SetupConfirmationVC"];
           objVC.objSelectedMHubDevice = [[Hub alloc] initWithHub:self.objSelectedMHubDevice];
           objVC.isSelectedPaired = false;
           objVC.arrSelectedSlaveDevice = [[NSMutableArray alloc] init];
           [self.navigationController pushViewController:objVC animated:YES];
           
       }
       
       
       
   }
   else
   {
       bool flag_checkAllUpdatedOrNot = false;
       for (int i = 0; i < [self.arr_allAvailableHubsForUpdate count]; i++) {
           
           Hub *hubObj = (Hub *)[self.arr_allAvailableHubsForUpdate objectAtIndex:i];
           if(hubObj.mosVersion >= hubObj.MHub_BenchMarkVersion)
           {
               
               flag_checkAllUpdatedOrNot = true;
           }
           else
           {
               flag_checkAllUpdatedOrNot = false;
           }
           
       }
       
       if(flag_checkAllUpdatedOrNot)
       {
//           SetupConfirmationVC *objVC = [mainStoryboard instantiateViewControllerWithIdentifier:@"SetupConfirmationVC"];
//           objVC.objSelectedMHubDevice = [[Hub alloc] initWithHub:self.objSelectedMHubDevice_ForSetupConfirmation];
//           objVC.isSelectedPaired = self.isSelectedPaired_ForSetupConfirmation;
//           objVC.arrSelectedSlaveDevice = [[NSMutableArray alloc] initWithArray:self.arrSelectedSlaveDevice_ForSetupConfirmation];
//           [self.navigationController pushViewController:objVC animated:YES];
           
           for (UIViewController *controller in self.navigationController.viewControllers) {
               
               //Do not forget to import AnOldViewController.h
               if ([controller isKindOfClass:[UpdateHubViewController class]]) {
                   
                   [self.navigationController popToViewController:controller
                                                         animated:YES];
                   return;
               }
           }
           
       }
       else
       {
           
           for (UIViewController *controller in self.navigationController.viewControllers) {
               
               //Do not forget to import AnOldViewController.h
               if ([controller isKindOfClass:[UpdateAvailableViewController class]]) {
                   
                   [self.navigationController popToViewController:controller
                                                         animated:YES];
                   return;
               }
           }
           
       }
       
       
       
       
      
   }
    
    
    
//    UpdateAvailableViewController *objVC = [mainStoryboard instantiateViewControllerWithIdentifier:@"UpdateAvailableViewController"];
//    [self.navigationController popToViewController:objVC animated:NO];
}
    




/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
